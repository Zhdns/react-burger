{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { request } from \"../utility/utility\";\nconst initialState = {\n  data: []\n};\nexport const getData = createAsyncThunk('data.getData', () => {\n  return request('/ingredients');\n});\nconst appSlice = createSlice({\n  name: 'app',\n  initialState,\n  reducers: {\n    setData: (state, action) => {\n      state.data = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(getData.fulfilled, (state, action) => {\n      state.data = action.payload;\n    }).addCase(getData.rejected, (state, action) => {\n      console.error(\"Ошибка при отправке заказа:\", action.error.message);\n    });\n  }\n});\nexport const {\n  setData\n} = appSlice.actions;\nexport default appSlice;","map":{"version":3,"names":["createSlice","createAsyncThunk","request","initialState","data","getData","appSlice","name","reducers","setData","state","action","payload","extraReducers","builder","addCase","fulfilled","rejected","console","error","message","actions"],"sources":["/Users/ois/Documents/oisCoder/ReactBurgerTs/src/services/appSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk, PayloadAction, AnyAction} from \"@reduxjs/toolkit\";\nimport { request } from \"../utility/utility\";\nimport { IngredientGlobalType } from \"../utility/types\";\n\ninterface AppSInterface {\n    data: IngredientGlobalType[]\n}\n\nconst initialState: AppSInterface = {\n    data: []\n}\n\nexport const getData = createAsyncThunk<IngredientGlobalType[], void>(\n    'data.getData', \n    () => {\n        return request('/ingredients')\n    }\n)\n\nconst appSlice =createSlice({\n    name: 'app', \n    initialState,\n    reducers: {\n        setData: (state, action: PayloadAction<IngredientGlobalType[]>) => {\n            state.data = action.payload\n        }\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(getData.fulfilled, (state, action: PayloadAction<IngredientGlobalType[]>) => {\n                state.data = action.payload;\n            })\n            .addCase(getData.rejected, (state, action: AnyAction) => {\n                console.error(\"Ошибка при отправке заказа:\", action.error.message);\n            })\n    }\n})\n\nexport const {setData} = appSlice.actions\nexport default appSlice\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAiC,kBAAkB;AACzF,SAASC,OAAO,QAAQ,oBAAoB;AAO5C,MAAMC,YAA2B,GAAG;EAChCC,IAAI,EAAE;AACV,CAAC;AAED,OAAO,MAAMC,OAAO,GAAGJ,gBAAgB,CACnC,cAAc,EACd,MAAM;EACF,OAAOC,OAAO,CAAC,cAAc,CAAC;AAClC,CACJ,CAAC;AAED,MAAMI,QAAQ,GAAEN,WAAW,CAAC;EACxBO,IAAI,EAAE,KAAK;EACXJ,YAAY;EACZK,QAAQ,EAAE;IACNC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAA6C,KAAK;MAC/DD,KAAK,CAACN,IAAI,GAAGO,MAAM,CAACC,OAAO;IAC/B;EACJ,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACFC,OAAO,CAACV,OAAO,CAACW,SAAS,EAAE,CAACN,KAAK,EAAEC,MAA6C,KAAK;MAClFD,KAAK,CAACN,IAAI,GAAGO,MAAM,CAACC,OAAO;IAC/B,CAAC,CAAC,CACDG,OAAO,CAACV,OAAO,CAACY,QAAQ,EAAE,CAACP,KAAK,EAAEC,MAAiB,KAAK;MACrDO,OAAO,CAACC,KAAK,CAAC,6BAA6B,EAAER,MAAM,CAACQ,KAAK,CAACC,OAAO,CAAC;IACtE,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAACX;AAAO,CAAC,GAAGH,QAAQ,CAACe,OAAO;AACzC,eAAef,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}