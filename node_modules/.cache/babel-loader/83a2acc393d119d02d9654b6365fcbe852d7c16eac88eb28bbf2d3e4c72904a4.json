{"ast":null,"code":"var _jsxFileName = \"/Users/ois/Documents/oisCoder/ReactBurgerTs/src/pages/RegistrationPages.tsx\",\n  _s = $RefreshSig$();\nimport { Input, Button } from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport './styles.css';\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useDispatch } from 'react-redux';\nimport { registration } from \"../services/isLogin\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Registration(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text text_type_main-medium\",\n      children: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      noValidate: true,\n      onSubmit: e => {\n        e.preventDefault();\n        props.submit();\n      },\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        type: 'text',\n        placeholder: 'Имя',\n        onChange: props.setName //e => setName(e.target.value)\n        ,\n        value: props.name,\n        name: 'name',\n        error: props.validName //!validName\n        ,\n        errorText: props.errorName,\n        size: 'default',\n        extraClass: \"ml-1 mt-8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: 'email',\n        placeholder: 'Email',\n        onChange: props.setEmail //e => setEmail(e.target.value)\n        ,\n        value: props.email,\n        name: 'email',\n        error: props.validEmail //validEmail ? false : true\n        ,\n        errorText: props.errorEmail,\n        size: 'default',\n        extraClass: \"ml-1 mt-8\",\n        ref: props.emailRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: props.revealPass //revealPass ? \"text\" : \"password\"\n        ,\n        placeholder: 'Пароль',\n        onChange: props.setPass //e => setPass(e.target.value)\n        ,\n        icon: props.icon //revealPass ? \"HideIcon\" : 'ShowIcon'\n        ,\n        value: props.pass,\n        name: 'pass',\n        error: props.validPass //!validPass\n        ,\n        onIconClick: props.showPass,\n        errorText: props.errorPass,\n        size: 'default',\n        extraClass: \"ml-1 mt-8 mb-8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"submitButton\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          htmlType: \"submit\",\n          type: \"primary\",\n          size: \"medium\",\n          disabled: props.isRegistrationValid,\n          children: \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"options\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"subForLink text text_type_main-small\",\n        children: \"\\u0423\\u0436\\u0435 \\u0437\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u044B?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        className: \"link text text_type_main-small\",\n        onClick: props.statusLogIn,\n        children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n_c = Registration;\nfunction RegistrationPage() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [revealPass, setRevealPass] = useState(false);\n  const [validEmail, setValidEmail] = useState(true);\n  const emailRef = useRef(null);\n  const [errorEmail, setErrorEmail] = useState('');\n  const [name, setName] = useState('');\n  const [validPass, setValidPass] = useState(true);\n  const [validName, setValidName] = useState(true);\n  const [errorPass, setErrorPass] = useState('');\n  const [errorName, setErrorName] = useState('');\n  const [isRegistrationValid, setIsRegistrationValid] = useState(false);\n  const latinLetters = /^[A-Za-z0-9_.]+$/;\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [isNewPassValid, setIsNewPassValid] = useState(true);\n  const showPass = () => {\n    setRevealPass(!revealPass);\n  };\n  useEffect(() => {\n    if (emailRef.current && emailRef.current.validity.valid) {\n      setValidEmail(true);\n      setErrorEmail('');\n    } else {\n      setValidEmail(false);\n      setErrorEmail('Неверный формат электронной почты');\n    }\n  }, [email]);\n  useEffect(() => {\n    if (password.length > 0) {\n      if (!latinLetters.test(password)) {\n        setValidPass(false);\n        setErrorPass('Только латинские буквы и цифры');\n      } else if (password.length < 6) {\n        setValidPass(false);\n        setErrorPass('Длинна пароля меньше 6 символов');\n      } else {\n        setValidPass(true);\n        setErrorPass('');\n      }\n    } else {\n      setValidPass(true);\n      setErrorPass('');\n    }\n  }, [password]);\n  useEffect(() => {\n    if (name.length > 10) {\n      setValidName(false);\n      setErrorName('Длинна не больше 10 символов');\n    } else {\n      setValidName(true);\n      setErrorName('');\n    }\n  });\n  useEffect(() => {\n    if (validEmail && validName && password.length > 6 && latinLetters.test(password) && name.length > 0 && email.length > 0) {\n      setIsRegistrationValid(true);\n    } else {\n      setIsRegistrationValid(false);\n    }\n  }, [password, name, email, validEmail, validName]);\n  useEffect(() => {\n    if (password.length > 6 && latinLetters.test(password)) {\n      setIsNewPassValid(true);\n    } else {\n      setIsNewPassValid(false);\n    }\n  });\n  const changeStatus = route => {\n    navigate(route);\n  };\n  const handleSubmit = async () => {\n    const bodyData = {\n      \"email\": email.toLowerCase(),\n      \"password\": password,\n      \"name\": name\n    };\n    try {\n      await dispatch(registration(bodyData)).unwrap();\n      navigate('/');\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Registration, {\n    setName: e => setName(e.target.value),\n    name: name,\n    validName: !validName,\n    errorName: errorName,\n    setEmail: e => setEmail(e.target.value),\n    email: email,\n    validEmail: validEmail ? false : true,\n    errorEmail: errorEmail,\n    emailRef: emailRef,\n    revealPass: revealPass ? \"text\" : \"password\",\n    setPass: e => setPassword(e.target.value),\n    pass: password,\n    icon: revealPass ? \"HideIcon\" : 'ShowIcon',\n    validPass: !validPass,\n    showPass: showPass,\n    errorPass: errorPass,\n    isRegistrationValid: !isRegistrationValid,\n    statusLogIn: () => changeStatus(\"/login\"),\n    submit: () => handleSubmit()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 9\n  }, this);\n}\n_s(RegistrationPage, \"CLXkGr7vh2wD/SrgyeeMYRwr+fw=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n_c2 = RegistrationPage;\nexport default RegistrationPage;\nvar _c, _c2;\n$RefreshReg$(_c, \"Registration\");\n$RefreshReg$(_c2, \"RegistrationPage\");","map":{"version":3,"names":["Input","Button","React","useState","useEffect","useRef","Link","useNavigate","useDispatch","registration","jsxDEV","_jsxDEV","Registration","props","className","children","fileName","_jsxFileName","lineNumber","columnNumber","noValidate","onSubmit","e","preventDefault","submit","type","placeholder","onChange","setName","value","name","error","validName","errorText","errorName","size","extraClass","setEmail","email","validEmail","errorEmail","ref","emailRef","revealPass","setPass","icon","pass","validPass","onIconClick","showPass","errorPass","htmlType","disabled","isRegistrationValid","to","onClick","statusLogIn","_c","RegistrationPage","_s","password","setPassword","setRevealPass","setValidEmail","setErrorEmail","setValidPass","setValidName","setErrorPass","setErrorName","setIsRegistrationValid","latinLetters","dispatch","navigate","isNewPassValid","setIsNewPassValid","current","validity","valid","length","test","changeStatus","route","handleSubmit","bodyData","toLowerCase","unwrap","console","target","_c2","$RefreshReg$"],"sources":["/Users/ois/Documents/oisCoder/ReactBurgerTs/src/pages/RegistrationPages.tsx"],"sourcesContent":["import { EmailInput, Input, ShowIcon, HideIcon, Button } from \"@ya.praktikum/react-developer-burger-ui-components\"\nimport React, { useState, useEffect, useRef } from 'react';\nimport './styles.css'\nimport { Link, useNavigate, useLocation, NavLink} from \"react-router-dom\";\nimport {  setStatusProfile } from \"../services/setLoginPageStatus\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { LOG_IN, REGISTRATION, FORGOT_PASSWORD, RESET_PASSWORD, PROFILE, TOKEN, REFRESH_TOKEN, PASSWORD, ISLOGIN, USER} from \"../utility/constants\";\nimport { authorization, setUser, resetPasswordAction, setUserEmail, setUserName, registration } from \"../services/isLogin\";\nimport { AppDispatch } from \"../index\";\n\ntype RegistrationProps = {\n    submit: () => void;\n    setName: (e: React.ChangeEvent<HTMLInputElement>) => void;\n    name: string;\n    validName: boolean;\n    errorName: string;\n    setEmail: (e: React.ChangeEvent<HTMLInputElement>) => void;\n    email: string;\n    validEmail: boolean;\n    errorEmail: string;\n    emailRef: React.Ref<HTMLInputElement>;\n    revealPass: \"text\" | \"password\"; \n    setPass: (e: React.ChangeEvent<HTMLInputElement>) => void;\n    icon: any; \n    pass: string;\n    validPass: boolean;\n    errorPass: string;\n    showPass: () => void;\n    isRegistrationValid: boolean;\n    statusLogIn: () => void;\n  };\n\n\nfunction Registration(props: RegistrationProps)  {\n\n    return (\n        <div className=\"main\">\n            <h1 className=\"text text_type_main-medium\">Регистрация</h1>\n            <form noValidate onSubmit={(e) => {\n                    e.preventDefault();\n                    props.submit();\n                    }}>\n                <Input\n                type={'text'}\n                placeholder={'Имя'}\n                onChange={props.setName} //e => setName(e.target.value)\n                value={props.name}\n                name={'name'}\n                error={props.validName} //!validName\n                errorText={props.errorName} \n                size={'default'}\n                extraClass=\"ml-1 mt-8\"\n                />\n                <Input\n                type={'email'}\n                placeholder={'Email'}\n                onChange={props.setEmail} //e => setEmail(e.target.value)\n                value={props.email}\n                name={'email'}\n                error={props.validEmail} //validEmail ? false : true\n                errorText={props.errorEmail}\n                size={'default'}\n                extraClass=\"ml-1 mt-8\"\n                ref={props.emailRef}/>\n                <Input\n                type={props.revealPass} //revealPass ? \"text\" : \"password\"\n                placeholder={'Пароль'}\n                onChange={props.setPass} //e => setPass(e.target.value)\n                icon={props.icon} //revealPass ? \"HideIcon\" : 'ShowIcon'\n                value={props.pass}\n                name={'pass'}\n                error={props.validPass} //!validPass\n                onIconClick={props.showPass}\n                errorText={props.errorPass}\n                size={'default'}\n                extraClass=\"ml-1 mt-8 mb-8\"\n                />\n                <div className=\"submitButton\">\n                    <Button htmlType=\"submit\" type=\"primary\" size=\"medium\"  disabled={props.isRegistrationValid}>Зарегистрироваться</Button> \n                </div>\n            </form>\n            <div className=\"options\">\n                <p className=\"subForLink text text_type_main-small\">Уже зарегистрированы?</p>\n                <Link to='/login' className=\"link text text_type_main-small\" onClick={props.statusLogIn}>Войти</Link>\n            </div>\n        </div>\n    )\n}\n\n\nfunction RegistrationPage() {\n\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [revealPass, setRevealPass] = useState(false)\n    const [validEmail, setValidEmail] = useState(true)\n    const emailRef = useRef<HTMLInputElement>(null)\n    const [errorEmail, setErrorEmail] = useState('')\n    const [name, setName] = useState('')\n    const [validPass, setValidPass] = useState(true)\n    const [validName, setValidName] = useState(true)\n    const [errorPass, setErrorPass] = useState('')\n    const [errorName, setErrorName] = useState('')\n    const [isRegistrationValid, setIsRegistrationValid] = useState(false)\n    const latinLetters =/^[A-Za-z0-9_.]+$/;\n    const dispatch = useDispatch<AppDispatch>()\n    const navigate = useNavigate();\n    const [isNewPassValid, setIsNewPassValid] = useState(true)\n    \n\n\n    const showPass = () => {\n        setRevealPass(!revealPass)\n    }\n\n    useEffect(() => {\n        if (emailRef.current && emailRef.current.validity.valid) {\n            setValidEmail(true);\n            setErrorEmail('')\n        } else {\n            setValidEmail(false);\n            setErrorEmail('Неверный формат электронной почты')\n        }\n    }, [email])\n\n    useEffect(() => {\n        \n        if (password.length > 0) {\n            if (!latinLetters.test(password)) {\n                setValidPass(false);\n                setErrorPass('Только латинские буквы и цифры');\n            \n            } else if (password.length < 6) {\n                setValidPass(false);\n                setErrorPass('Длинна пароля меньше 6 символов');\n            } else {\n                setValidPass(true);\n                setErrorPass('');\n            }\n        } else {\n            setValidPass(true);\n            setErrorPass('');\n        }\n    }, [password]);\n\n\n    useEffect(() => {\n        if (name.length > 10) {\n            setValidName(false)\n            setErrorName('Длинна не больше 10 символов')\n        }\n        else {\n            setValidName(true)\n            setErrorName('')\n        }\n    })\n\n    useEffect(() => {\n        if (validEmail\n            && validName \n            && password.length > 6 \n            && latinLetters.test(password) \n            && name.length > 0 \n            && email.length > 0) \n            {\n            setIsRegistrationValid(true)\n        }\n        else {\n            setIsRegistrationValid(false)\n        }\n    }, [password, name, email, validEmail, validName])\n\n    useEffect(() => {\n        if(password.length > 6 && latinLetters.test(password)) {\n            setIsNewPassValid(true)\n        } else {\n            setIsNewPassValid(false)\n        }\n    })\n\n    const changeStatus = (route: string) => {\n        navigate(route);\n    }\n\n    const handleSubmit =  async () => {\n        const bodyData = {\n            \"email\": email.toLowerCase(), \n            \"password\": password, \n            \"name\": name,\n        }\n        \n        try{\n            await dispatch(registration(bodyData)).unwrap()\n            navigate('/')\n        } catch (error) {\n            console.error(\"Error:\", error)\n        }        \n    }\n\n    return (\n        <Registration\n                setName={e => setName(e.target.value)}\n                name={name}\n                validName={!validName}\n                errorName={errorName}\n                setEmail={e => setEmail(e.target.value)}\n                email={email}\n                validEmail={validEmail ? false : true}\n                errorEmail={errorEmail}\n                emailRef={emailRef}\n                revealPass={revealPass ? \"text\" : \"password\"}\n                setPass={e => setPassword(e.target.value)}\n                pass={password}\n                icon={revealPass ? \"HideIcon\" : 'ShowIcon'}\n                validPass={!validPass}\n                showPass={showPass}\n                errorPass={errorPass}\n                isRegistrationValid={!isRegistrationValid}\n                statusLogIn={() => changeStatus(\"/login\")}\n                submit={() => handleSubmit()}/>\n    )\n}\n\nexport default RegistrationPage"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}