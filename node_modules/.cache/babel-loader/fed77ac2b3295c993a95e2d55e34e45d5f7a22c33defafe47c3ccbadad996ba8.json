{"ast":null,"code":"import { createListenerMiddleware } from '@reduxjs/toolkit';\nimport { wsConnected, wsConnecting, wsDisconnected, wsOnMessage } from './middlewareReducer';\nconst listenerMiddleware = createListenerMiddleware();\nlet socket = null;\nlistenerMiddleware.startListening({\n  actionCreator: wsConnecting,\n  effect: (action, listenerApi) => {\n    if (socket && socket.readyState === WebSocket.OPEN) {\n      socket.close();\n      socket = null;\n    }\n    socket = new WebSocket(action.payload);\n    socket.onopen = event => {\n      //console.log('Socket opened', event);\n      listenerApi.dispatch(wsConnected(action.payload));\n    };\n    socket.onmessage = event => {\n      const data = JSON.parse(event.data);\n      listenerApi.dispatch(wsOnMessage(data));\n    };\n    socket.onclose = event => {\n      //console.log('Socket closed', event);\n      listenerApi.dispatch(wsDisconnected(action.payload));\n    };\n    socket.onerror = error => {\n      console.error('WebSocket error: ', error);\n      listenerApi.dispatch(wsDisconnected(action.payload));\n    };\n  }\n});\nlistenerMiddleware.startListening({\n  actionCreator: wsDisconnected,\n  effect: () => {\n    if (socket && socket.readyState === WebSocket.OPEN) {\n      socket.close();\n    }\n    socket = null;\n  }\n});\nexport default listenerMiddleware;","map":{"version":3,"names":["createListenerMiddleware","wsConnected","wsConnecting","wsDisconnected","wsOnMessage","listenerMiddleware","socket","startListening","actionCreator","effect","action","listenerApi","readyState","WebSocket","OPEN","close","payload","onopen","event","dispatch","onmessage","data","JSON","parse","onclose","onerror","error","console"],"sources":["/Users/ois/Documents/oisCoder/ReactBurgerTs/src/services/middleware.ts"],"sourcesContent":["import { createListenerMiddleware, MiddlewareAPI, Dispatch, AnyAction, PayloadAction } from '@reduxjs/toolkit'\nimport { wsConnected, wsConnecting, wsDisconnected, wsOnMessage} from './middlewareReducer';\n\ntype WebSocketEvent = Event & {data: string}\n\ninterface ListenerApi extends MiddlewareAPI<Dispatch<AnyAction>, any> {\n    dispatch: Dispatch<AnyAction>\n}\n\nconst listenerMiddleware = createListenerMiddleware();\n\nlet socket: any = null;\n\nlistenerMiddleware.startListening({\n    actionCreator: wsConnecting,\n    effect: (action: PayloadAction<string>, listenerApi: ListenerApi) => {\n        if (socket && socket.readyState === WebSocket.OPEN) {\n            socket.close();\n            socket = null;\n        } \n\n    socket = new WebSocket(action.payload);\n\n    socket.onopen = (event: Event) => {\n    //console.log('Socket opened', event);\n    listenerApi.dispatch(wsConnected(action.payload));\n    };\n\n    socket.onmessage = (event: WebSocketEvent) => {\n    const data = JSON.parse(event.data);\n    listenerApi.dispatch(wsOnMessage(data));\n    };\n\n    \n\n    socket.onclose = (event: CloseEvent) => {\n    //console.log('Socket closed', event);\n    listenerApi.dispatch(wsDisconnected(action.payload));\n    };\n\n    socket.onerror = (error: Event) => {\n    console.error('WebSocket error: ', error);\n    listenerApi.dispatch(wsDisconnected(action.payload));\n    };\n},\n});\n\nlistenerMiddleware.startListening({\n    actionCreator: wsDisconnected,\n    effect: () => {\n        if (socket && socket.readyState === WebSocket.OPEN) {\n            socket.close();\n        } \n    \n    socket = null;\n    \n},\n});\n\nexport default listenerMiddleware\n\n\n\n\n\n"],"mappings":"AAAA,SAASA,wBAAwB,QAA2D,kBAAkB;AAC9G,SAASC,WAAW,EAAEC,YAAY,EAAEC,cAAc,EAAEC,WAAW,QAAO,qBAAqB;AAQ3F,MAAMC,kBAAkB,GAAGL,wBAAwB,CAAC,CAAC;AAErD,IAAIM,MAAW,GAAG,IAAI;AAEtBD,kBAAkB,CAACE,cAAc,CAAC;EAC9BC,aAAa,EAAEN,YAAY;EAC3BO,MAAM,EAAEA,CAACC,MAA6B,EAAEC,WAAwB,KAAK;IACjE,IAAIL,MAAM,IAAIA,MAAM,CAACM,UAAU,KAAKC,SAAS,CAACC,IAAI,EAAE;MAChDR,MAAM,CAACS,KAAK,CAAC,CAAC;MACdT,MAAM,GAAG,IAAI;IACjB;IAEJA,MAAM,GAAG,IAAIO,SAAS,CAACH,MAAM,CAACM,OAAO,CAAC;IAEtCV,MAAM,CAACW,MAAM,GAAIC,KAAY,IAAK;MAClC;MACAP,WAAW,CAACQ,QAAQ,CAAClB,WAAW,CAACS,MAAM,CAACM,OAAO,CAAC,CAAC;IACjD,CAAC;IAEDV,MAAM,CAACc,SAAS,GAAIF,KAAqB,IAAK;MAC9C,MAAMG,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACL,KAAK,CAACG,IAAI,CAAC;MACnCV,WAAW,CAACQ,QAAQ,CAACf,WAAW,CAACiB,IAAI,CAAC,CAAC;IACvC,CAAC;IAIDf,MAAM,CAACkB,OAAO,GAAIN,KAAiB,IAAK;MACxC;MACAP,WAAW,CAACQ,QAAQ,CAAChB,cAAc,CAACO,MAAM,CAACM,OAAO,CAAC,CAAC;IACpD,CAAC;IAEDV,MAAM,CAACmB,OAAO,GAAIC,KAAY,IAAK;MACnCC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;MACzCf,WAAW,CAACQ,QAAQ,CAAChB,cAAc,CAACO,MAAM,CAACM,OAAO,CAAC,CAAC;IACpD,CAAC;EACL;AACA,CAAC,CAAC;AAEFX,kBAAkB,CAACE,cAAc,CAAC;EAC9BC,aAAa,EAAEL,cAAc;EAC7BM,MAAM,EAAEA,CAAA,KAAM;IACV,IAAIH,MAAM,IAAIA,MAAM,CAACM,UAAU,KAAKC,SAAS,CAACC,IAAI,EAAE;MAChDR,MAAM,CAACS,KAAK,CAAC,CAAC;IAClB;IAEJT,MAAM,GAAG,IAAI;EAEjB;AACA,CAAC,CAAC;AAEF,eAAeD,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}