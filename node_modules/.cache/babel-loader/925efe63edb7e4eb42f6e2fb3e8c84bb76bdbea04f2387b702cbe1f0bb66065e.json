{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useLocation, useNavigate } from 'react-router-dom';\nconst PrivateRoute = _ref => {\n  _s();\n  let {\n    children,\n    condition,\n    redirectTo\n  } = _ref;\n  const location = useLocation();\n  const navigate = useNavigate();\n  if (!condition) {\n    navigate(redirectTo, {\n      state: {\n        from: location\n      }\n    });\n    return null;\n  }\n  return children;\n};\n_s(PrivateRoute, \"ZmJpvzBBf8J7VCgSKqUUk0eHjAY=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["useLocation","useNavigate","PrivateRoute","_ref","_s","children","condition","redirectTo","location","navigate","state","from","_c","$RefreshReg$"],"sources":["/Users/ois/Documents/oisCoder/ReactBurgerTs/src/components/PriveteRouteTS.ts"],"sourcesContent":["import { ReactNode } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\ninterface PrivateRouteProps {\n  children: ReactNode;\n  condition: boolean;\n  redirectTo: string;\n}\n\nconst PrivateRoute = ({ children, condition, redirectTo }: PrivateRouteProps) => {\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  if (!condition) {\n    navigate(redirectTo, { state: { from: location } });\n    return null;\n  }\n\n  return children;\n};\n\nexport default PrivateRoute;"],"mappings":";AACA,SAASA,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAQ3D,MAAMC,YAAY,GAAGC,IAAA,IAA4D;EAAAC,EAAA;EAAA,IAA3D;IAAEC,QAAQ;IAAEC,SAAS;IAAEC;EAA8B,CAAC,GAAAJ,IAAA;EAC1E,MAAMK,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAE9B,IAAI,CAACK,SAAS,EAAE;IACdG,QAAQ,CAACF,UAAU,EAAE;MAAEG,KAAK,EAAE;QAAEC,IAAI,EAAEH;MAAS;IAAE,CAAC,CAAC;IACnD,OAAO,IAAI;EACb;EAEA,OAAOH,QAAQ;AACjB,CAAC;AAACD,EAAA,CAVIF,YAAY;EAAA,QACCF,WAAW,EACXC,WAAW;AAAA;AAAAW,EAAA,GAFxBV,YAAY;AAYlB,eAAeA,YAAY;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}