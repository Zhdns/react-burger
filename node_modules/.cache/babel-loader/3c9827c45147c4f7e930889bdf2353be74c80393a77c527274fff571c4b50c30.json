{"ast":null,"code":"var _jsxFileName = \"/Users/ois/Documents/oisCoder/ReactBurgerTs/src/pages/ResetPasswordPage.tsx\",\n  _s = $RefreshSig$();\nimport { Input, Button } from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport React, { useState, useEffect } from 'react';\nimport './styles.css';\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useDispatch } from 'react-redux';\nimport { resetPassword } from \"../services/isLogin\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResetPassword(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      noValidate: true,\n      onSubmit: e => {\n        e.preventDefault();\n        props.submit();\n      },\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        type: props.revealPass //revealPass ? \"text\" : \"password\"\n        ,\n        placeholder: 'Пароль',\n        onChange: props.setPass //e => setPass(e.target.value)\n        ,\n        icon: props.icon //revealPass ? \"HideIcon\" : 'ShowIcon'\n        ,\n        value: props.pass,\n        name: 'pass',\n        error: props.validPass //!validPass\n        ,\n        onIconClick: props.showPass,\n        errorText: props.errorPass,\n        size: 'default',\n        extraClass: \"ml-1 mt-8 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: 'text',\n        placeholder: 'Введите код из письма',\n        onChange: props.setResetPass //e => setResetPass(e.target.value)\n        ,\n        value: props.resetPass,\n        name: 'emailCode',\n        error: false,\n        errorText: 'Ошибка',\n        size: 'default',\n        extraClass: \"ml-1 mt-8 mb-8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"submitButton\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          htmlType: \"submit\",\n          type: \"primary\",\n          size: \"medium\",\n          disabled: props.isNewPassValid,\n          children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"options\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"subForLink text text_type_main-small\",\n        children: \"\\u0412\\u0441\\u043F\\u043E\\u043C\\u043D\\u0438\\u043B\\u0438 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        className: \"link text text_type_main-small\",\n        children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_c = ResetPassword;\nfunction ResetPasswordPage() {\n  _s();\n  const [password, setPassword] = useState('');\n  const [revealPass, setRevealPass] = useState(false);\n  const [validPass, setValidPass] = useState(true);\n  const [errorPass, setErrorPass] = useState('');\n  const latinLetters = /^[A-Za-z0-9_.]+$/;\n  const [resetPass, setResetPass] = useState('');\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const showPass = () => {\n    setRevealPass(!revealPass);\n  };\n  useEffect(() => {\n    if (password.length > 0) {\n      if (!latinLetters.test(password)) {\n        setValidPass(false);\n        setErrorPass('Только латинские буквы и цифры');\n      } else if (password.length < 6) {\n        setValidPass(false);\n        setErrorPass('Длинна пароля меньше 6 символов');\n      } else {\n        setValidPass(true);\n        setErrorPass('');\n      }\n    } else {\n      setValidPass(true);\n      setErrorPass('');\n    }\n  }, [password]);\n  const handleSubmit = async (email, resetPass) => {\n    const bodyData = {\n      password: password,\n      token: resetPass\n    };\n    try {\n      await dispatch(resetPassword(bodyData)).unwrap();\n      navigate('/login');\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ResetPassword, {\n    revealPass: revealPass ? \"text\" : \"password\",\n    setPass: e => setPassword(e.target.value),\n    pass: password,\n    icon: revealPass ? \"HideIcon\" : 'ShowIcon',\n    validPass: !validPass,\n    showPass: showPass,\n    errorPass: errorPass,\n    setResetPass: e => setResetPass(e.target.value),\n    resetPass: resetPass,\n    isNewPassValid: !validPass,\n    statusLogIn: () => navigate(\"/login\"),\n    submit: () => handleSubmit(password, resetPass)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 9\n  }, this);\n}\n_s(ResetPasswordPage, \"xJmB6KktqxeF8fmlzLhaz7wAuc8=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n_c2 = ResetPasswordPage;\nexport default ResetPasswordPage;\nvar _c, _c2;\n$RefreshReg$(_c, \"ResetPassword\");\n$RefreshReg$(_c2, \"ResetPasswordPage\");","map":{"version":3,"names":["Input","Button","React","useState","useEffect","Link","useNavigate","useDispatch","resetPassword","jsxDEV","_jsxDEV","ResetPassword","props","className","children","noValidate","onSubmit","e","preventDefault","submit","type","revealPass","placeholder","onChange","setPass","icon","value","pass","name","error","validPass","onIconClick","showPass","errorText","errorPass","size","extraClass","fileName","_jsxFileName","lineNumber","columnNumber","setResetPass","resetPass","htmlType","disabled","isNewPassValid","to","_c","ResetPasswordPage","_s","password","setPassword","setRevealPass","setValidPass","setErrorPass","latinLetters","dispatch","navigate","length","test","handleSubmit","email","bodyData","token","unwrap","console","target","statusLogIn","_c2","$RefreshReg$"],"sources":["/Users/ois/Documents/oisCoder/ReactBurgerTs/src/pages/ResetPasswordPage.tsx"],"sourcesContent":["import { EmailInput, Input, ShowIcon, HideIcon, Button } from \"@ya.praktikum/react-developer-burger-ui-components\"\nimport React, { useState, useEffect, useRef } from 'react';\nimport './styles.css'\nimport { Link, useNavigate, useLocation, NavLink} from \"react-router-dom\";\nimport {  setStatusProfile } from \"../services/setLoginPageStatus\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { LOG_IN, REGISTRATION, FORGOT_PASSWORD, RESET_PASSWORD, PROFILE, TOKEN, REFRESH_TOKEN, PASSWORD, ISLOGIN, USER} from \"../utility/constants\";\nimport { authorization, setUser, resetPasswordAction, setUserEmail, setUserName, logout, resetPassword} from \"../services/isLogin\";\nimport { AppDispatch } from \"../index\";\n\ntype ResetPasswordProps = {\n    submit: () => void;\n    revealPass?: \"text\" | \"password\";\n    setPass: (e: React.ChangeEvent<HTMLInputElement>) => void;\n    icon?: any;\n    pass: string;\n    validPass: boolean;\n    showPass: () => void;\n    errorPass: string;\n    setResetPass: (e: React.ChangeEvent<HTMLInputElement>) => void;\n    resetPass: string;\n    isNewPassValid: boolean;\n    statusLogIn?: () => void; \n  };\n\n\nfunction ResetPassword(props: ResetPasswordProps) {\n    return (\n        <div className=\"main\">\n            <form noValidate onSubmit={(e) => {\n                    e.preventDefault();\n                    props.submit();\n                    }}>\n            <Input\n                type={props.revealPass} //revealPass ? \"text\" : \"password\"\n                placeholder={'Пароль'}\n                onChange={props.setPass} //e => setPass(e.target.value)\n                icon={props.icon} //revealPass ? \"HideIcon\" : 'ShowIcon'\n                value={props.pass}\n                name={'pass'}\n                error={props.validPass} //!validPass\n                onIconClick={props.showPass}\n                errorText={props.errorPass}\n                size={'default'}\n                extraClass=\"ml-1 mt-8 \"\n                />\n                <Input\n                type={'text'}\n                placeholder={'Введите код из письма'}\n                onChange={props.setResetPass} //e => setResetPass(e.target.value)\n                value={props.resetPass}\n                name={'emailCode'}\n                error={false}\n                errorText={'Ошибка'}\n                size={'default'}\n                extraClass=\"ml-1 mt-8 mb-8\"\n                />\n                <div className=\"submitButton\">\n                    <Button htmlType=\"submit\" type=\"primary\" size=\"medium\" disabled={props.isNewPassValid}>Сохранить</Button>\n                </div>\n            </form>\n            <div className=\"options\">\n                <p className=\"subForLink text text_type_main-small\">Вспомнили пароль?</p>\n                <Link to='/login' className=\"link text text_type_main-small\">Войти</Link>\n            </div>\n        </div>\n    )\n}\n\nfunction ResetPasswordPage() { \n    const [password, setPassword] = useState('')\n    const [revealPass, setRevealPass] = useState(false)\n    const [validPass, setValidPass] = useState(true)\n    const [errorPass, setErrorPass] = useState('')\n    const latinLetters =/^[A-Za-z0-9_.]+$/;\n    const [resetPass, setResetPass] = useState('')\n    const dispatch = useDispatch<AppDispatch>()\n    const navigate = useNavigate();\n\n\n    const showPass = () => {\n        setRevealPass(!revealPass)\n    }\n\n    useEffect(() => {\n        \n        if (password.length > 0) {\n            if (!latinLetters.test(password)) {\n                setValidPass(false);\n                setErrorPass('Только латинские буквы и цифры');\n            \n            } else if (password.length < 6) {\n                setValidPass(false);\n                setErrorPass('Длинна пароля меньше 6 символов');\n            } else {\n                setValidPass(true);\n                setErrorPass('');\n            }\n        } else {\n            setValidPass(true);\n            setErrorPass('');\n        }\n    }, [password]);\n\n    const handleSubmit = async (email: string, resetPass: string) => {\n        const bodyData = {\n            password: password,\n            token: resetPass,\n        }\n        try {\n            await dispatch(resetPassword(bodyData)).unwrap()\n            navigate('/login')\n        } catch (error) {\n            console.error(\"Error:\", error)\n        }\n    }\n\n\n    return ( \n        <ResetPassword \n        revealPass={revealPass ? \"text\" : \"password\"}\n        setPass={e => setPassword(e.target.value)}\n        pass={password}\n        icon={revealPass ? \"HideIcon\" : 'ShowIcon'}\n        validPass={!validPass}\n        showPass={showPass}\n        errorPass={errorPass}\n        setResetPass={e => setResetPass(e.target.value)}\n        resetPass={resetPass}\n        isNewPassValid={!validPass}\n        statusLogIn={() => navigate(\"/login\")}\n        submit={() => handleSubmit(password, resetPass)}/>\n    )\n}\n\nexport default ResetPasswordPage"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}